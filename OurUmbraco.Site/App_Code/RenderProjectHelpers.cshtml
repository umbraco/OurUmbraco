@using OurUmbraco.Our
@using OurUmbraco.Repository.Models
@using OurUmbraco.Project

@helper RenderProjectBox(Package projectContent)
{
    <a class="package-box" href="@projectContent.Url">
        <div class="package-image">
            @RenderProjectImage(Utils.GetScreenshotPath(projectContent.Image))
        </div>
        <div class="package-info">
            <h3>@projectContent.Name</h3>
            <span class="text-fadeout"></span>
            <p class="small">@(new HtmlString(projectContent.Summary.CleanHtmlAttributes()))</p>
        </div>

        <div class="other">
            <div class="package-badge">
                <span class="package-number">@projectContent.VersionRange</span>
            </div>
            <div class="stats">
                <span class="karma">
                    @projectContent.Likes <span><i class="icon-Hearts color-red"></i></span>
                </span>
                <span class="downloads" title="@projectContent.Downloads total downloads">
                    @FormatDownloadNumber(projectContent.Downloads) <span><i class="icon-Download-alt"></i></span>
                </span>
            </div>
        </div>
    </a>
}

@helper RenderProjectImage(string defaultScreenshot)
{
    <img src="@defaultScreenshot?width=64&height=64&bgcolor=fff&format=png"
         srcset="@defaultScreenshot?width=128&height=128&bgcolor=fff&format=png 2x,
             @defaultScreenshot?width=192&height=192&bgcolor=fff&format=png 3x" />
}

@functions{
    public static string FormatDownloadNumber(int downloads)
    {
        if (downloads > 999999999)
        {
            return downloads.ToString("0,,,.###B", System.Globalization.CultureInfo.InvariantCulture);
        }
        else if (downloads > 999999)
        {
            return downloads.ToString("0,,.##M", System.Globalization.CultureInfo.InvariantCulture);
        }
        else if (downloads > 999)
        {
            return downloads.ToString("0,.#K", System.Globalization.CultureInfo.InvariantCulture);
        }
        else
        {
            return downloads.ToString(System.Globalization.CultureInfo.InvariantCulture);
        }
    }
}
