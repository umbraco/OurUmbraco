<%@ Master Language="C#" MasterPageFile="~/masterpages/Master.master" AutoEventWireup="true" %>

<asp:Content ID="Content1" ContentPlaceHolderId="Head" runat="server">
  <link rel="stylesheet" type="text/css" href="/css/releases.css?v=6" />
  <!-- release scripts -->
  <script src="/Scripts/jquery.cookie.js" type="text/javascript"></script>
  <script src="/Scripts/knockout-2.0.0.js" type="text/javascript"></script>
  <script src="/Scripts/knockout.mapping-latest.js" type="text/javascript"></script>
  <script src="/Scripts/humane.js" type="text/javascript"></script>
  <script src="/Scripts/app.js?v=4" type="text/javascript"></script>
</asp:Content>
  
<asp:Content ID="Content2" ContentPlaceHolderId="Main" runat="server">
  <div id="body" class="subpage wrapper">
    <div style="margin-top: 25px;">
      <umbraco:Macro ID="Macro1" Alias="Breadcrumb" runat="server"></umbraco:Macro>
    </div>
<h2 id="loading" data-bind="visible: versions().length == 0">Loading release details...</h2>
<!-- ko foreach: versions -->
<h1>
    Umbraco v<umbraco:Item ID="Item1" field="pageName" runat="server" />
    <small data-bind="visible: !released()">Status: <span data-bind="    text: inProgressRelease() === true ? 'In progress' : 'Planned'"></span></small>
    <small data-bind="visible: released()">Status: Released</small>
</h1>
<div class="version" data-bind="css: { released: released() }, attr: { id: id }">
          <h3>
          <span data-bind="text: (released() ? '100' : percentComplete()) + '% Complete' "></span>
            <span data-bind="text: percentInProgress() + '% In Progress' "></span>  
        </h3>
        <!-- Progress Bar -->    
        <div class="progressbar">
          <div class="bar bar1 rl" data-bind="style: { width: (released() ? '100' : percentComplete()) + '%' }, visible: percentComplete() > 0 || released(), css: { rr: percentInProgress() == 0 }">&nbsp;</div>
            <div class="bar bar2 rr" data-bind="style: { width: percentInProgress() + '%' }, visible: percentInProgress() > 0, css: { rl: percentComplete() == 0 }">&nbsp;</div>
        </div>
  <h3 data-bind="visible: !released()">Target release date: <span data-bind="    text: releaseDate() === '' ? 'Not yet determined' : new Date(releaseDate()).format('dddd, dd MMMM yyyy')" style="color:#5B5B5B"></span></h3>
  <!--<h3 data-bind="visible: released()"><a href="http://umbraco.codeplex.com/releases">Download it now!</a></h3>-->
  <umbraco:Macro ID="Macro2" Language="cshtml" runat="server">
			@{ 
				var downloads = Model.ReleaseDownload.Where("Visible"); 	
				var countIsOdd = ((downloads.Count() & 1) != 0) ? true : false;				
				if(downloads.Any())
				{
					<br /><br />
					<h2>Available downloads</h2>
					<ul class="projectGroups" style="">
						@foreach (var item in downloads)
						{							
							var background = item.IsFirst() ? "/images/releases/download.png" : "/media/2483095/download.png"; 
							var width = (item.IsLast() && countIsOdd) ? 895 : 380;
							var numberOfDownloads = 0;
							int.TryParse(item.NumberOfDownloads, out numberOfDownloads);
							
							<li>
								<div style="background-image: url('@background');width: @(width)px;height: 40px;">
									<h3><a href="/ReleaseDownload?id=@item.Id">@item.Name</a></h3>
									<p>Downloaded @numberOfDownloads times - uploaded @item.UploadDate.ToString("D")</p>
								</div>
							</li>
						}
					</ul>
				}
			} 
  </umbraco:Macro>

  <div style="width: 500px; float: left; padding-top: 15px;">
      <span data-bind="visible: releaseDescription() != ''">
    <h2>Summary</h2>
    <p><span data-bind="html: releaseDescription"></span></p>
  </span>
      
  <umbraco:Macro ID="Macro3" Language="cshtml" runat="server">
		@if(Model.HasValue("bodyText")) {
			<h2>Release notes</h2>
			@Model.BodyText
		}
  </umbraco:Macro>
      
	  
  <h2>Related changes from the issue tracker</h2>
  <div class="panel-wrapper">
    <div class="panel-left">
        <!-- Columns for statuses -->
        <div class="statuses group">
            <div class="status features">
                <h3>Features</h3>
                <p data-bind="visible: featureIssues().length == 0">No items to display</p>
                <ul data-bind="template: { name: 'issue-template', foreach: featureIssues }"></ul>                
            </div>
            <div class="status breaking">
                <h3>Breaking Changes</h3>
                <p data-bind="visible: breakingIssues().length == 0">No items to display</p>
                <ul data-bind="template: { name: 'issue-template', foreach: breakingIssues }"></ul>
            </div>
            <div class="status issues">
                <h3>Issues &amp; Tasks</h3>
                <p data-bind="visible: issueIssues().length == 0">No items to display</p>
                <ul data-bind="template: { name: 'issue-template', foreach: issueIssues }"></ul>
            </div>
        </div>
          
          </div>
    </div>
  </div>
    <div style="width: 400px; float: right; padding-top: 15px;">
        <h2>Getting started</h2>
        <p>Make sure to give the <a href="http://our.umbraco.org/documentation/Installation/">installation instructions a read</a>.</p>
        <p>Check the <strong>free</strong> foundation videos on how to get started building Umbraco sites. They're available from:<br />
            <ul>
                <li><a href="http://umbraco.com/help-and-support/video-tutorials/getting-started">Introduction for webmasters</a></li>
                <li><a href="http://umbraco.com/help-and-support/video-tutorials/umbraco-fundamentals">Understand the Umbraco concepts</a></li>
                <li><a href="http://umbraco.com/help-and-support/video-tutorials/developing-with-umbraco">Using .NET with Umbraco</a></li>
            </ul>
        <h2>World's best community</h2>
        <p>You'll find our über active community working hard to help each other at Our Umbraco: <a href="http://our.umbraco.org">http://our.umbraco.org</a></p>
        <h2>Upgrading from older versions</h2>
        <p>Make sure to read the <a href="http://our.umbraco.org/documentation/Installation/Upgrading/">upgrade instructions</a> before you attempt an upgrade.</p>
        
        <umbraco:Macro ID="Macro4" runat="server" Language="cshtml">
            <h2>Found a bug?</h2>
            <p>We're happy to help you with any problems you encounter, so please report them in <a href="http://issues.umbraco.org/issues/U4">the issue tracker</a> and use the “Affected versions” field to set it to @Model.Name. <br />Do a search first though, if the issue already exists, give it an extra vote.</p>
        
            @if(Model.HasValue("linkToChangeset")) {
                <h2>Source code</h2>
                <p>The source for <a href="@Model.LinkToChangeset">this specific release is available for download from the repository</a> (click the "ZIP" button).</p>
            }
            
            @if(Model.HasNuGet) {
                <h2>Also available on NuGet</h2>
                
                <div class="nuget-badge">
                    <a href="https://nuget.org/packages/UmbracoCms/@Model.Name">
                        <p><code>PM&gt; Install-Package UmbracoCms -Version @Model.Name</code></p>
                    </a>
                </div>
                
            }
        </umbraco:Macro>

    </div>
  
</div>
<!-- /ko -->
  </div>
<script type="text/html" id="issue-template">
    <li data-bind="attr: { 'class': state().replace(/\s/g, '') }">
        <a data-bind="text: id() + ' ' + title(), attr: { href: 'http://issues.umbraco.org/issue/' + id() }" target="_blank"></a>
    </li>
</script>
</asp:Content>

<asp:Content ContentPlaceHolderId="EndScripts" runat="server">
    <umbraco:Macro runat="server" Language="cshtml">
 
        <script type="text/javascript">
            var currentVersions = [];
            var inProgressVersions = [];
            var futureVersions = [];
            var patchReleases = [];
            $(function () {

                // Apply bindings
                ko.applyBindings(viewModel);
                // Load data
                loadData('@Model.Name');

            });

    </script>
    </umbraco:Macro>
  
</asp:Content>