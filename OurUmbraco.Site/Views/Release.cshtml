@using System.Globalization
@using OurUmbraco.Our.Extensions
@using OurUmbraco.Our.Models
@using OurUmbraco.Our.Services
@inherits UmbracoTemplatePage
@{
    Layout = "~/Views/Master.cshtml";

    var downloads = Model.Content.Children().Where(x => x.ContentType.Alias == "ReleaseDownload").ToArray();
    if (Request.Params["fromdownload"] != null)
    {
        if (downloads.Any())
        {
            var downloadIds = new List<int>();
            foreach (var item in downloads)
            {
                downloadIds.Add(item.Id);
            }
            Response.Redirect("/ReleaseDownload?id=" + downloadIds.First(), false);
        }
    }

    var currentPage = UmbracoContext.Current.PublishedContentRequest.PublishedContent;

    var releasesService = new ReleasesService();
    var releases = releasesService.GetReleasesCache();
    var release = releases.FirstOrDefault(x => x.Version == currentPage.Name);
    var latestRelease = releasesService.GetLatestRelease();

    var version1 = new Version(Model.Content.Name);
    var version2 = new Version(latestRelease.Version);

    var umbracoHelper = new UmbracoHelper(UmbracoContext.Current);
    var releaseContent = umbracoHelper.TypedContent(umbracoHelper.UmbracoContext.PageId);
    if (releaseContent != null)
    {
        var overrideDescription = releaseContent.GetPropertyValue<bool>("overrideYouTrackDescription");
        if (overrideDescription)
        {
            release.ReleaseDescription = releaseContent.GetPropertyValue<string>("bodyText");
        }
        var overrideReleaseDate = releaseContent.GetPropertyValue<DateTime>("overrideYouTrackReleaseDate");
        if (overrideReleaseDate != default(DateTime))
        {
            release.ReleaseDate = overrideReleaseDate;
        }
    }
}

<div class="has-sidebar release">
    <div class="page-content">
        <div class="sidebar-area">
            <div class="sidebar-content">
                <div class="content-wrapper">

                    <nav>
                        <ul class="level-1">
                            @foreach (var currentRelease in releases.Where(x => x.Released && x.LatestRelease))
                            {

                                <li>
                                    <a class="active" href="@Url.GetReleaseUrl(currentRelease)">
                                        <h3>Latest Release - v@(currentRelease.Version)</h3>
                                    </a>
                                </li>
                            }

                            <li>
                                <a href="/contribute/progress">
                                    <h3>In Progress</h3>
                                </a>
                            </li>
                            <li>
                                <a href="/contribute/releases">
                                    <h3>All Releases</h3>
                                </a>
                                <ul class="level-2">
                                    <li>
                                        <a href=""><h4>Umbraco 8</h4></a>
                                    </li>
                                    <li>
                                        <a href=""><h4>Umbraco 7</h4></a>
                                    </li>
                                    <li>
                                        <a href=""><h4>Umbraco 6</h4></a>
                                    </li>
                                    <li>
                                        <a href=""><h4>Umbraco 4</h4></a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </nav>
                    <div class="release-hints">
                        @if (currentPage.Name.StartsWith("8."))
                        {
                            <details>
                                <summary>Frequently asked questions</summary>
                                <p>We've put together some answers to often asked questions - <a href="https://our.umbraco.com/documentation/Umbraco8FAQ">you can find it in the Umbraco 8 - FAQ article</a>.</p>
                            </details>
                        }
                        <details>
                            <summary>Getting started</summary>

                            <p>Make sure to give the <a href="https://our.umbraco.com/documentation/Getting-Started/Setup/Install/">installation instructions a read</a>.</p>
                            @if (currentPage.Name.StartsWith("8."))
                            {
                                <p>Check the <strong>free</strong> <a href="https://umbraco.tv/videos/umbraco-v8/">foundation videos</a> on how to get started building Umbraco sites.</p>
                            }
                            else
                            {
                                <p>
                                    Check the <strong>free</strong> <a href="https://umbraco.tv/videos/umbraco-v7/implementor/">foundation videos</a> on how to get started building Umbraco sites. They're available from:<br />
                                    <ul>
                                        <li><a href="https://umbraco.tv/videos/umbraco-v7/implementor/fundamentals/installation/">Installation</a></li>
                                        <li><a href="https://umbraco.tv/videos/umbraco-v7/implementor/fundamentals/document-types/">Document Types</a></li>
                                        <li><a href="https://umbraco.tv/videos/umbraco-v7/implementor/fundamentals/templating/">Templating</a></li>
                                        <li><a href="https://umbraco.tv/videos/umbraco-v7/implementor/fundamentals/stylesheets-and-javascript/">Stylesheets and Javascript</a></li>
                                    </ul>
                                </p>
                            }
                        </details>
                        <details>
                            <summary>World's best community</summary>
                            <p>You'll find our über active community working hard to help each other at Our Umbraco: <a href="https://our.umbraco.com">https://our.umbraco.com</a></p>
                        </details>
                        <details>
                            <summary>Upgrading from older versions</summary>
                            <p>Make sure to read the <a href="https://our.umbraco.com/documentation/getting-started/setup/upgrading/">upgrade instructions</a> before you attempt an upgrade.</p>
                        </details>
                        <details>
                            <summary>Found a bug?</summary>
                            <p>We're happy to help you with any problems you encounter, so please report them in <a href="https://github.com/umbraco/Umbraco-CMS/issues/new/choose">the issue tracker</a> and mention you're using version @Model.Content.Name. <br />Do a search first though, if the issue already exists, give it a "thumbs up".</p>
                        </details>
                        @if (Model.Content.HasValue("linkToChangeset"))
                        {
                            <details>
                                <summary>Source code</summary>
                                <p>The source for <a href="@(Model.Content.GetPropertyValue<string>("linkToChangeset"))">this specific release is available for download from the repository</a> (click the "ZIP" button).</p>
                            </details>
                        }
                    </div>
                </div><!-- .content-wrapper -->
            </div><!-- .sidebar-content -->
        </div>
        <div class="main-area">
            <div class="main-content">
                <div class="content-wrapper">
                    <div>
                        @Html.Action("Render", "Breadcrumb", new { linkToCurrent = true })
                    </div>
                    <style>
                        @{
                            var uri = HttpContext.Current.Request.Url;
                            var currentUrl = uri.Scheme + Uri.SchemeDelimiter + uri.Host;
                        }

                        @if(currentUrl.StartsWith("https://our.umbraco.com", StringComparison.InvariantCultureIgnoreCase)) {
                            // SJ: I know, this is NUTS! But for some reason..
                            // on live..
                            // we need to reset these because it looks different 🤷‍♂️

                            <text>
                            .release .markdown-syntax ul li {
                                margin-bottom: 0;
                                line-height: 1.0;
                            }
                            </text>
                        }
                        
                    </style>

                    <div class="explain">
                        <div class="dot big progress">
                            <div class="chart" data-percent="@release.PercentComplete">
                                <p>@(release.PercentComplete)%</p>
                            </div>
                        </div>
                        <div class="content">
                            <h2>v@(Model.Content.Name)</h2>
                            <small>Status: <span>@(release.Released ? "Released" : "In Progress")</span></small>
                            @if (release.Released == false)
                            {
                                <h3>
                                    <span>@(release.PercentComplete)% complete</span>
                                    <span>@(100 - release.PercentComplete)% in progress</span>
                                </h3>

                                <h3>Target release date: <span style="color:#5B5B5B">@release.ReleaseDate.AsDisplayedReleaseDate()</span></h3>
                            }
                            else
                            {
                                <h3>Released on <span style="color:#5B5B5B">@release.ReleaseDate.AsDisplayedReleaseDate()</span></h3>
                            }
                            

                            @if (version2 > version1)
                            {
                                <p class="smiley  superUnhappy"><strong>There is a newer version available - <a href="@Url.GetReleaseUrl(latestRelease)">v@{@latestRelease.Version}</a></strong></p>
                            }

                            @if (Model.Content.HasValue("releaseNotes"))
                            {
                                <small><p>@Html.Raw(Model.Content.GetPropertyValue<string>("releaseNotes"))</p></small>
                            }
                        </div>
                    </div>
                    <div>
                        @{
                            var countIsOdd = ((downloads.Count() & 1) != 0) ? true : false;
                            if (downloads.Any())
                            {

                                <div class="get-release row">
                                    @foreach (var item in downloads)
                                    {
                                        var background = item.IsFirst() ? "/images/releases/download.png" : "/media/2483095/download.png";
                                        var width = (item.IsLast() && countIsOdd) ? 895 : 380;
                                        var numberOfDownloads = item.GetPropertyValue<int>("numberOfDownloads");
                                        numberOfDownloads = numberOfDownloads + OurUmbraco.Our.Utils.GetReleaseDownloadCount(item.Id);
                                        if (item.Name.Contains("WebPI") == false)
                                        {
                                            <div class="release @(item.IsFirst() == false ? "bin" : "zip") col-sm-1">
                                                <i class="icon-Download-alt"></i>
                                            </div>
                                            <div class="release @(item.IsFirst() == false ? "bin" : "zip") col-md-5">

                                                <h3><a href="/ReleaseDownload?id=@item.Id" onclick="_gaq.push(['_trackEvent', 'Release', 'Download', '@item.Name']);">@item.Name</a></h3>
                                                @if (item.IsFirst())
                                                {
                                                    <p>This is the main Umbraco download, generally you won't need anything else.</p>
                                                }
                                                <small>Downloaded @numberOfDownloads times - uploaded @(item.GetPropertyValue<DateTime>("UploadDate").ToString("D"))</small>
                                            </div>
                                        }
                                        else
                                        {
                                            <div style="display: none;"><a href="/ReleaseDownload?id=@item.Id" onclick="_gaq.push(['_trackEvent', 'Release', 'Download', '@item.Name']);">@item.Name</a></div>
                                        }
                                    }

                                    <div class="release col-md-@(downloads.Length % 2 == 0 ? "7 nuget" : "6") package-detail-sidebar">
                                        @if (Model.Content.GetPropertyValue<bool>("hasNuGet"))
                                        {
                                            <h3>Also available on NuGet</h3>
                                            
                                            <span class="pm-nuget">
                                                <input class="pre nuget" value="Install-Package UmbracoCms -Version @Model.Content.Name" readonly="">
                                            </span>
                                        }
                                    </div>
                                </div>
                            }
                        }
                        <div class="row markdown-syntax">

                            <div class="col-md-10">

                                @if (release.ReleaseDescription != string.Empty && currentPage.HasValue("bodyText") == false)
                                {
                                    <span>
                                        <h2>Summary</h2>
                                        <p><span>@Html.Raw(release.ReleaseDescription)</span></p>
                                    </span>
                                }

                                @if (Model.Content.HasValue("bodyText"))
                                {
                                    <h2>Release notes</h2>
                                    @Html.Raw(Model.Content.GetPropertyValue<string>("bodyText"))
                                }

                                <h2>Related changes from the issue tracker</h2>
                                <div class="panel-wrapper">
                                    <div class="panel-left">
                                        <!-- Columns for statuses -->
                                        @if (release.FullVersion >= new Version(8, 7, 0))
                                        {
                                            foreach (var category in release.CategorizedIssues
                                                .Where(x => x.Issues.Count != 0)
                                                .OrderBy(x => x.Priority).ThenBy(x => x.Name)
                                                .ToList())
                                            {
                                                <details open>
                                                    <summary>@category.Name (@category.Issues.Count)</summary>

                                                    <ul class="@(release.Released ? "released" : "unreleased")">
                                                        @foreach (var issue in category.Issues)
                                                        {
                                                            <li class="@(release.Released == false ? issue.State.StateIcon() : null)" title="@issue.State">
                                                                @if (issue.CommunityContribution && issue.ContributorAvatar == string.Empty)
                                                                {
                                                                    <img src="/Assets/images/925px-Unknown_person.jpg?width=25&upscale=true" class="contrib-img" alt="A community contribution helped close this issue #h5yr!" />
                                                                }
                                                                @if (issue.CommunityContribution && issue.ContributorAvatar != string.Empty)
                                                                {
                                                                    <img src="/remote.axd?@(issue.ContributorAvatar)&width=25&upscale=true" class="contrib-img" alt="A community contribution helped close this issue #h5yr!" />
                                                                }
                                                                @if (issue.CommunityContribution == false)
                                                                {
                                                                    <img src="/Assets/images/umbraco-logo.png?width=25&upscale=true" class="contrib-img" />
                                                                }
                                                                @{
                                                                    var url = issue.Source == ReleaseSource.YouTrack
                                                                        ? $"https://issues.umbraco.org/issue/{issue.Id}"
                                                                        : $"https://github.com/umbraco/Umbraco-CMS/issues/{issue.Id}";
                                                                }
                                                                <a href="@url" target="_blank" title="@(issue.CommunityContribution ? "A community contribution helped close this issue #h5yr!" : null)" rel="noreferrer noopener">@issue.Title</a>
                                                            </li>
                                                        }
                                                    </ul>
                                                </details>
                                            }
                                        }
                                        else
                                        {
                                            var anyContributions = release.Issues.Any(x => x.CommunityContribution)
                                                                   || release.Features.Any(x => x.CommunityContribution);

                                            <div class="statuses group">
                                                <div class="status features">
                                                    <h3>Features</h3>
                                                    @{
                                                        var features = release.Features.ToList();
                                                        if (features.Any())
                                                        {
                                                            <ul>
                                                                @foreach (var issue in features)
                                                                {
                                                                    <li class="@issue.State.StateIcon()" title="@issue.State">
                                                                        @{
                                                                            var url = issue.Source == ReleaseSource.YouTrack
                                                                                ? $"https://issues.umbraco.org/issue/{issue.Id}"
                                                                                : $"https://github.com/umbraco/Umbraco-CMS/issues/{issue.Id}";
                                                                        }
                                                                        @ContributionIcon(anyContributions, issue)
                                                                        <a href="@url" target="_blank" rel="noreferrer noopener">@issue.Id - @issue.Title</a>
                                                                    </li>
                                                                }
                                                            </ul>
                                                        }
                                                        else
                                                        {
                                                            <p>No items to display</p>
                                                        }
                                                    }
                                                </div>
                                                <div class="status breaking">
                                                    <h3>Breaking Changes</h3>
                                                    @{
                                                        var breaking = release.Issues.Where(x => x.Breaking).ToList();
                                                        if (breaking.Any())
                                                        {
                                                            <ul>
                                                                @foreach (var issue in breaking)
                                                                {
                                                                    <li class="@issue.State.StateIcon()" title="@issue.State">
                                                                        @{
                                                                            var url = issue.Source == ReleaseSource.YouTrack
                                                                                ? $"https://issues.umbraco.org/issue/{issue.Id}"
                                                                                : $"https://github.com/umbraco/Umbraco-CMS/issues/{issue.Id}";
                                                                        }
                                                                        @ContributionIcon(anyContributions, issue)
                                                                        <a href="@url" target="_blank" rel="noreferrer noopener">@issue.Id - @issue.Title</a>
                                                                    </li>
                                                                }
                                                            </ul>
                                                        }
                                                        else
                                                        {
                                                            <p>No items to display</p>
                                                        }
                                                    }
                                                </div>
                                                <div class="status issues">
                                                    <h3>Issues & Tasks</h3>
                                                    @{
                                                        var issues = release.Issues.Where(x => x.Breaking == false).Except(release.Features).ToList();
                                                        if (issues.Any())
                                                        {

                                                            <ul>
                                                                @foreach (var issue in issues)
                                                                {
                                                                    <li class="@issue.State.StateIcon()" title="@issue.State">
                                                                        @{
                                                                            var url = issue.Source == ReleaseSource.YouTrack
                                                                                ? $"https://issues.umbraco.org/issue/{issue.Id}"
                                                                                : $"https://github.com/umbraco/Umbraco-CMS/issues/{issue.Id}";
                                                                        }
                                                                        @ContributionIcon(anyContributions, issue)
                                                                        <a href="@url" target="_blank" rel="noreferrer noopener">@issue.Id - @issue.Title</a>
                                                                    </li>
                                                                }
                                                            </ul>
                                                        }
                                                        else
                                                        {
                                                            <p>No items to display</p>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        }
                                    </div>

                                </div>
                            </div>
                        </div><!-- .row .markdown-syntax -->
                    </div>
                </div><!-- .content-wrapper -->
            </div><!-- .main-content -->
        </div><!-- .main-area -->
    </div><!-- .page-content -->
</div><!-- has-sidebar -->

@helper ContributionIcon(bool anyContribution, Release.Issue issue)
{
    if (anyContribution == false)
    {
        return;

    }

    if (issue.CommunityContribution)
    {
        <img src="/Assets/images/925px-Unknown_person.jpg?width=25&upscale=true" class="contrib-img" alt="A community contribution helped close this issue #h5yr!" />
    }
    else
    {
        <img src="/Assets/images/umbraco-logo.png?width=25&upscale=true" class="contrib-img" alt="A community contribution helped close this issue #h5yr!" />
    }
}

@section EndScripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/easy-pie-chart/2.1.4/jquery.easypiechart.min.js"></script>
    <script type="text/javascript">
        setTimeout(function () {
            $('.chart').easyPieChart({
                size: 60,
                barColor: '#303ea1',
                scaleColor: false,
                trackColor: '#7682d6'
            });
        }, 300);
    </script>
}