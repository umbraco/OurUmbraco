<script type="text/javascript">

    function loadAllGitHubContributors() {
        $('#github-contributors .github-contributor-list').addClass('all');
    }


    // from https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array

    function shuffle(array) {
        var currentIndex = array.length, temporaryValue, randomIndex;

        // While there remain elements to shuffle...
        while (0 !== currentIndex) {

            // Pick a remaining element...
            randomIndex = Math.floor(Math.random() * currentIndex);
            currentIndex -= 1;

            // And swap it with the current element.
            temporaryValue = array[currentIndex];
            array[currentIndex] = array[randomIndex];
            array[randomIndex] = temporaryValue;
        }

        return array;
    }

    // from https://stackoverflow.com/questions/48815262/animate-placeholder-text-so-it-types-multiple-phrases

    // Add something to given element placeholder
    function addToPlaceholder(toAdd, el) {
        el.attr('placeholder', el.attr('placeholder') + toAdd);
        // Delay between symbols "typing"
        return new Promise(resolve => setTimeout(resolve, 100));
    }

    // Cleare placeholder attribute in given element
    function clearPlaceholder(el) {
        el.attr("placeholder", "");
    }

    // Print one phrase
    function printPhrase(phrase, el) {
        return new Promise(resolve => {
            // Clear placeholder before typing next phrase
            clearPlaceholder(el);
            let letters = phrase.split('');
            // For each letter in phrase
            letters.reduce(
                (promise, letter, index) => promise.then(_ => {
                    // Resolve promise when all letters are typed
                    if (index === letters.length - 1) {
                        // Delay before start next phrase "typing"
                        setTimeout(resolve, 1000);
                    }
                    return addToPlaceholder(letter, el);
                }),
                Promise.resolve()
            );
        });
    }

    // Print given phrases to element
    function printPhrases(phrases, el) {
        // For each phrase
        // wait for phrase to be typed
        // before start typing next
        phrases.reduce(
            (promise, phrase) => promise.then(_ => printPhrase(phrase, el)),
            Promise.resolve()
        );
    }

    $(document).ready(function() {
        try {
            $("#twitter-search").load("@Url.Action("TwitterSearchResult", "TwitterSearch", new {numberOfResults = 6})");
        } catch (errTwitter) {
            console.log("Couldn't load Twitter feed", errTwitter.message);
        }

        try {
            $("#meetups").load("@Url.Action("GetEvents", "Meetups")");
        }
        catch (errMeetups) {
            console.log("Couldn't load meetups", errMeetups.message);
        }

        try {
            $("#forum-activity").load("@Url.Action("LatestActivity", "LatestActivity", new {numberOfTopics = 6})");
        } catch (errForum) {
            console.log("Couldn't load latest forum activity", errForum.message);
        }

        try {
            $("#github-contributors").load("@Url.Action("GitHubGetContributorsResult", "GitHubContributor")");
        }
        catch (errGitHub) {
            console.log("Couldn't load latest GitHub contributor activity", errGitHub.message);
        }
        
    });
</script> 
