@using System.Configuration
@using System.Web.Configuration
@using ClientDependency.Core.Mvc
@using OurUmbraco.Our
@using OurUmbraco.Our.Controllers
@using OurUmbraco.Our.Extensions

@inherits UmbracoViewPage<OurUmbraco.Our.Models.ProfileModel>
@{
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);

    //Google Maps API Key
    var apiKey = ConfigurationManager.AppSettings["GoogleServerKey"];

    Html.RequiresJs("~/Assets/js/map/profile.map.js", 5)
        .RequiresJs("https://maps.googleapis.com/maps/api/js?key=" + apiKey + "&callback=initMap", 6);
    
}

<!-- Modal for file upload -->
<div id="update-avatar-dialog" class="community-dialog">
    <div>
        <p><b>Upload avatar</b></p>
        <p class="invalid-file">The select file type is invalid. File must be gif, png, jpg, jpeg.</p>
        <input type="file" name="file" id="file" data-action="/umbraco/api/community/imageupload" />
        <div style="text-align:center;">
            <button class="button transparent tiny">Cancel<div class="span" style="display:none;"><div class=" loader"></div></div></button>
        </div>
    </div>
</div>


<div class="profile-settings">
    <h3>Linked accounts</h3>
    <div class="linked-accounts">
        <table>
            <tr>
                <td>
                    @if (String.IsNullOrWhiteSpace(Model.GitHubUsername))
                    {
                        using (Html.BeginUmbracoForm<ProfileController>("LinkGitHub"))
                        {
                            @Html.AntiForgeryToken()
                            <input class="button" type="submit" value="Link with GitHub">
                        }
                    }
                    else
                    {
                        using (Html.BeginUmbracoForm<ProfileController>("UnlinkGitHub"))
                        {
                            @Html.AntiForgeryToken()
                            <input class="button red" type="submit" value="Unlink GitHub">
                        }
                    }
                </td>
                <td>
                    @if (Model.HasGitHubUsername)
                    {
                        <p class="linked">Linked with GitHub: <span>@Model.GitHubUsername</span></p>
                    }
                    <p>
                        Linking with your GitHub account will show a link on your Our Umbraco profile to your GitHub
                        profile. You will then also be able to link to your Our Umbraco profile using your GitHub username
                        - eg. like <code>/members/username</code>.
                    </p>
                    <p>
                        If you have contributed to Umbraco on GitHub, we will also use your GitHub username to link and
                        acknowledge these contributions on Our Umbraco.
                    </p>

                </td>
            </tr>
            @*<tr>
                <td>
                    @if (String.IsNullOrWhiteSpace(Model.TwitterAlias))
                    {
                        using (Html.BeginUmbracoForm<ProfileController>("LinkTwitter"))
                        {
                            @Html.AntiForgeryToken()
                            <input class="button" type="submit" value="Link with Twitter">
                        }
                    }
                    else
                    {
                        using (Html.BeginUmbracoForm<ProfileController>("UnlinkTwitter"))
                        {
                            @Html.AntiForgeryToken()
                            <input class="button red" type="submit" value="Unlink Twitter">
                        }
                    }
                </td>
                <td>

                    @if (Model.HasTwitterAlias)
                    {
                        <p class="linked">Linked with Twitter: <span>@Model.TwitterAlias</span></p>
                    }
                    <p>Linking with your Twitter account will show a link on your Our Umbraco profile to your Twitter profile.</p>
                </td>
            </tr>*@
        </table>
    </div>
</div>

<div class="profile-settings">
    <h3>Change your profile</h3>
    <div class="profile-settings-forms">

        @using (Html.BeginUmbracoForm<ProfileController>("HandleSubmit"))
        {
            @Html.ValidationSummary()
            @Html.AntiForgeryToken()

            <div class="avatar" id="avatar">
                <label for="avatar">
                    Avatar
                </label>

                <div class="avatar-image inked">
                    @Html.Raw(Model.AvatarHtml)
                    <span>Change image</span>
                </div>
                @Html.HiddenFor(m => m.Avatar)
            </div>

            <div class="profile-input" id="username">
                @Html.LabelFor(m => m.Name)
                @Html.TextBoxFor(m => m.Name)
            </div>

            <div class="profile-input" id="email">
                @Html.LabelFor(m => m.Email)
                @Html.TextBoxFor(m => m.Email)
            </div>

            <div class="profile-input" id="password">
                @Html.LabelFor(m => m.Password)
                @Html.PasswordFor(m => m.Password, new { @class = "password-input" })
            </div>

            <div class="profile-input confirm-password" id="repeat-password">
                @Html.LabelFor(m => m.RepeatPassword)
                @Html.PasswordFor(m => m.RepeatPassword, new { @class = "password-input" })
            </div>

            <div class="profile-input" id="company">
                @Html.LabelFor(m => m.Company)
                @Html.TextBoxFor(m => m.Company)
            </div>

            <div class="profile-input" id="bio">
                @Html.LabelFor(m => m.Bio)
                @Html.TextAreaFor(m => m.Bio)
            </div>

            <div>
                <h3 style="font-weight: bold; margin-top: 6px; margin-bottom: 6px;">Location</h3>
                <p>
                    Share your rough location on the <a href="/community">community map</a>, featuring the sense of scale of the Umbraco community and other members near by. We recommend you do not place a map marker to an exact location.
                </p>

                <div id="profile-map" style="min-height: 500px;"></div>

                <div>
                    <span class="button" id="geolocate-me">Use my geo location</span>
                    <span class="button red disabled" id="remove-me">Clear my location</span>
                </div>

                <div>
                    <!--TODO: Decide if we display these (so user can see their saved data, or to set these as hidden fields -->
                    @Html.HiddenFor(m => m.Latitude)
                    @Html.HiddenFor(m => m.Longitude)
                </div>
            </div>

            <input class="button green" type="submit" value="Save changes">

            if (TempData["success"] != null)
            {
                <small class="notification success">
                    Changes saved
                </small>
            }

        }

    </div>
</div>

<style>

    .profile-settings h3 {
        margin-bottom: 20px;
        font-size: 2.1rem;
    }

    .profile-settings + .profile-settings {
        margin-top: 75px;
    }

    .profile-settings .linked-accounts  {
        display: flex;
    }

    .profile-settings .linked-accounts > form {
        margin-right: 10px;
    }

    .profile-settings .linked-accounts input.button {
        width: 160px;
        padding: 8px;
    }

    .profile-settings .linked-accounts td + td {
        padding: 0 0 50px 20px;
        vertical-align: top;
        line-height: 20px;
    }

    .profile-settings .linked-accounts code {
        background: #F5FBF1;
        color: #333;
        font-size: 14px;
    }

    .profile-settings .linked-accounts p.linked {
        color: #008800;
        font-weight: bold;
    }

    .profile-settings .linked-accounts p.linked span {
        text-decoration: underline;
    }

    .profile-settings .linked-accounts p + p {
        margin-top: 10px;
    }

</style>