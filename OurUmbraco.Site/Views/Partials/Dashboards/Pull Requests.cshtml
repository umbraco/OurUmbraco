@using OurUmbraco.Our.Api
@using OurUmbraco.Our.Services
@inherits OurUmbraco.Our.Models.OurUmbracoTemplatePage
@{
    var repoService = new RepositoryManagementService();
    var repositories = repoService.GetAllPublicRepositories().Where(x => x.InDashboard);

    var repository = "";
    if (string.IsNullOrWhiteSpace(Request.QueryString["repository"]) == false)
    {
        repository = Request.QueryString["repository"];
    }

    var monthly = false;
    if (string.IsNullOrWhiteSpace(Request.QueryString["period"]) == false)
    {
        var period = Request.QueryString["period"];
        monthly = period == "monthly";
    }

    var startYear = 2012;
    if (string.IsNullOrWhiteSpace(Request.QueryString["startYear"]) == false)
    {
        int.TryParse(Request.QueryString["startYear"], out startYear);
    }

    var startMonth = 6;
    if (string.IsNullOrWhiteSpace(Request.QueryString["startMonth"]) == false)
    {
        int.TryParse(Request.QueryString["startMonth"], out startMonth);
    }

    var debug = false;
    if (string.IsNullOrWhiteSpace(Request.QueryString["debug"]) == false)
    {
        var debugQueryString = Request.QueryString["debug"];
        debug = debugQueryString == "true";
    }

    var startDate = new DateTime(startYear, startMonth, 1);

    var controller = new DashboardStatisticsController();
    var contributorStatistics = controller.GetContributorStatistics(repository: repository, startYear: startYear, startMonth: startMonth, monthly: monthly);
}


<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Issue statistics (since @(startDate.ToString("MMMM yyyy")))</h6>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-sm-12">
                <form method="get">
                    <div>
                        <label>
                            Show
                            <select name="repository">
                                <option value="" @(repository == "" ? "selected" : null)>All repositories</option>
                                @foreach (var repo in repositories)
                                {
                                    <option value="@repo.Alias" @(repository == repo.Alias ? "selected" : null)>@repo.Alias</option>
                                }
                            </select>
                        </label>
                        &nbsp;|&nbsp;
                        <span>Grouped by: </span>
                        <label for="yearly">year</label>
                        <input type="radio" name="period" id="yearly" value="yearly" @(monthly == false ? "checked" : null) />
                        <label for="monthly">month</label>
                        <input type="radio" name="period" id="monthly" value="monthly" @(monthly ? "checked" : null) />
                        &nbsp;|&nbsp;
                        <span>Start month: </span>
                        <select name="startMonth">
                            @for (var i = 1; i <= 12; i++)
                            {
                                <option value="@i" @(startMonth == i ? "selected" : null)>@i</option>
                            }
                        </select>
                        &nbsp;|&nbsp;
                        <span>Start year: </span>
                        <select name="startYear">
                            @for (var i = 2010; i <= DateTime.Now.Year; i++)
                            {
                                <option value="@i" @(startYear == i ? "selected" : null)>@i</option>
                            }
                        </select>
                        &nbsp;&nbsp;
                        <input type="submit" name="Update" value="Update" />
                    </div>
                </form>
            </div>
        </div>
        <div class="col-sm-12">

            <table class="table table-bordered dataTable" id="dataTable" width="100%" cellspacing="0" role="grid" aria-describedby="dataTable_info" style="width: 100%;">

                <thead>
                    <tr role="row">
                        @if (string.IsNullOrWhiteSpace(repository) == false)
                        {
                            <th>Repository</th>
                        }
                        <th>Period</th>
                        <th>UniqueCtrb</th>
                        <th>NewCtrb</th>
                        <th>Created</th>
                        <th>Processed</th>
                        <th>ProcessRatio</th>
                        <th>FirstComment (Median)</th>
                        <th>FirstCommentOnTime</th>
                        <th>FirstCommentLate</th>
                        <th>FirstCommentOnTime%</th>
                        <th>CommentMissing</th>
                        <th>Leftovers</th>
                        <th>ReleasePRs</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var stat in contributorStatistics)
                    {
                        <tr>
                            @if (string.IsNullOrWhiteSpace(repository) == false)
                            {
                                <td>@repository</td>
                            }
                            <td>@stat.Title</td>
                            <td>@stat.UniqueContributorCount</td>
                            <td>@stat.FirstAcceptedPullRequests</td>
                            <td>@stat.PullRequestsCreated</td>
                            <td>@stat.PullRequestsProcessed</td>
                            <td>
                                @{
                                    var ratio = Math.Round((double)stat.PullRequestsProcessed / ((double)stat.PullRequestsCreated / 100), 2);
                                }
                                @(ratio)%
                            </td>
                            <td>@stat.MedianHoursToFirstComment</td>
                            <td>@stat.FirstCommentStatistics.FirstEventOnTime</td>
                            <td>@stat.FirstCommentStatistics.FirstEventLate</td>
                            <td>
                                @{
                                    var onTimePercentage = Math.Round((double)stat.FirstCommentStatistics.FirstEventOnTime / ((double)stat.PullRequestsCreated / 100), 2);
                                }
                                @(onTimePercentage)%
                            </td>
                            <td>@stat.FirstCommentStatistics.TeamEventMissing</td>
                            <td>@stat.PullRequestsStillOpenInPeriod</td>
                            <td>@stat.ReleasePullRequests</td>
                        </tr>
                        if (debug)
                        {
                            @Html.Partial("~/Views/Partials/Dashboards/DebugInfo.cshtml", stat.AllPulls)
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

